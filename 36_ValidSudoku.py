# Input: board = 
# [["5","3",".",".","7",".",".",".","."]
# ,["6",".",".","1","9","5",".",".","."]
# ,[".","9","8",".",".",".",".","6","."]
# ,["8",".",".",".","6",".",".",".","3"]
# ,["4",".",".","8",".","3",".",".","1"]
# ,["7",".",".",".","2",".",".",".","6"]
# ,[".","6",".",".",".",".","2","8","."]
# ,[".",".",".","4","1","9",".",".","5"]
# ,[".",".",".",".","8",".",".","7","9"]]
# Output: true

# Input: board = 
# [["8","3",".",".","7",".",".",".","."]
# ,["6",".",".","1","9","5",".",".","."]
# ,[".","9","8",".",".",".",".","6","."]
# ,["8",".",".",".","6",".",".",".","3"]
# ,["4",".",".","8",".","3",".",".","1"]
# ,["7",".",".",".","2",".",".",".","6"]
# ,[".","6",".",".",".",".","2","8","."]
# ,[".",".",".","4","1","9",".",".","5"]
# ,[".",".",".",".","8",".",".","7","9"]]
# Output: false

from typing import List
from collections import defaultdict

def ValidSudoku(board: List[List[str]]) -> bool:
    rowSet = defaultdict(set)
    columnSet = defaultdict(set)
    cubeSet = defaultdict(set)

    for r in range(len(board)):
        for c in range(len(board)):
            if board[r][c] == ".":
                continue
            if (board[r][c] in rowSet[r] or
                board[r][c] in columnSet[c] or
                board[r][c] in cubeSet[r//3,c//3]):
                return False
            rowSet[r].add(board[r][c])
            columnSet[c].add(board[r][c])
            cubeSet[r//3,c//3].add(board[r][c])
    return True

# Testing

test1_board = [["5","3",".",".","7",".",".",".","."]
,["6",".",".","1","9","5",".",".","."]
,[".","9","8",".",".",".",".","6","."]
,["8",".",".",".","6",".",".",".","3"]
,["4",".",".","8",".","3",".",".","1"]
,["7",".",".",".","2",".",".",".","6"]
,[".","6",".",".",".",".","2","8","."]
,[".",".",".","4","1","9",".",".","5"]
,[".",".",".",".","8",".",".","7","9"]]
test1_expected = True
test1_actual = ValidSudoku(test1_board)

assert test1_actual == test1_expected, f"Test 1 is expected to be {test1_expected} but is instead {test1_actual}."

test2_board = [["8","3",".",".","7",".",".",".","."]
,["6",".",".","1","9","5",".",".","."]
,[".","9","8",".",".",".",".","6","."]
,["8",".",".",".","6",".",".",".","3"]
,["4",".",".","8",".","3",".",".","1"]
,["7",".",".",".","2",".",".",".","6"]
,[".","6",".",".",".",".","2","8","."]
,[".",".",".","4","1","9",".",".","5"]
,[".",".",".",".","8",".",".","7","9"]]
test2_expected = False
test2_actual = ValidSudoku(test2_board)

assert test2_actual == test2_expected, f"Test 2 is expected to be {test2_expected} but is instead {test2_actual}."
